class Solution {
public:
    int solve(vector<int>& cost, int i, vector<int>& dp) {
        if (i == cost.size()) {
            return 0;
        }
        if (i == cost.size() - 1) {
            return cost[i];
        }

        if (dp[i] != -1) {
            return dp[i];
        }

        int oneStep = cost[i] + solve(cost, i + 1, dp);
        int twoStep = cost[i] + solve(cost, i + 2, dp);

        return dp[i] = min(oneStep, twoStep);
    }

    int minCostClimbingStairs(vector<int>& cost) {

        vector<int> dp(cost.size(), -1);
        return min(solve(cost, 0, dp), solve(cost, 1, dp));
    }
};
